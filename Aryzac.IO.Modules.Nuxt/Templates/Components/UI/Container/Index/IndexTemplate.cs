// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Aryzac.IO.Modules.Nuxt.Templates.Components.UI.Container.Index
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "D:\src\aryzac-io\aryzac.io.Modules.Nuxt\Aryzac.IO.Modules.Nuxt\Aryzac.IO.Modules.Nuxt\Templates\Components\UI\Container\Index\IndexTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class IndexTemplate : IntentTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n<script setup lang=\"ts\">\r\nimport constrainedToBreakpointWithPaddedContent from " +
                    "\'./constrained-to-breakpoint-with-padded-content.vue\';\r\nimport constrainedWithPa" +
                    "ddedContent from \'./constrained-with-padded-content.vue\';\r\nimport fullWidthOnMob" +
                    "ileConstrainedToBreakpointWithPaddedContentAboveMobile from \'./full-width-on-mob" +
                    "ile-constrained-to-breakpoint-with-padded-content-above-mobile.vue\';\r\nimport ful" +
                    "lWidthOnMobileConstrainedWithPaddedContentAbove from \'./full-width-on-mobile-con" +
                    "strained-with-padded-content-above.vue\';\r\nimport narrowConstrainedWithPaddedCont" +
                    "ent from \'./narrow-constrained-with-padded-content.vue\';\r\n\r\nconst props = define" +
                    "Props({\r\n    type: {\r\n        type: String,\r\n        default: \'constrainedToBrea" +
                    "kpoint\',\r\n        validator: value => {\r\n            return [\r\n                \'" +
                    "constrainedToBreakpoint\',\r\n                \'constrained\',\r\n                \'full" +
                    "WidthOnMobileConstrainedToBreakpoint\',\r\n                \'fullWidthOnMobileConstr" +
                    "ained\',\r\n                \'narrowConstrained\'\r\n            ].includes(value);\r\n  " +
                    "      }\r\n    }\r\n});\r\n\r\nconst Container = ref(null);\r\n\r\nswitch (props.type) {\r\n  " +
                    "  case \'constrainedToBreakpoint\':\r\n        Container.value = constrainedToBreakp" +
                    "ointWithPaddedContent;\r\n        break;\r\n    case \'constrained\':\r\n        Contain" +
                    "er.value = constrainedWithPaddedContent;\r\n        break;\r\n    case \'fullWidthOnM" +
                    "obileConstrainedToBreakpoint\':\r\n        Container.value = fullWidthOnMobileConst" +
                    "rainedToBreakpointWithPaddedContentAboveMobile;\r\n        break;\r\n    case \'fullW" +
                    "idthOnMobileConstrained\':\r\n        Container.value = fullWidthOnMobileConstraine" +
                    "dWithPaddedContentAbove;\r\n        break;\r\n    case \'narrowConstrained\':\r\n       " +
                    " Container.value = narrowConstrainedWithPaddedContent;\r\n        break;\r\n    defa" +
                    "ult:\r\n        throw new Error(`Unsupported container type: ${props.type}`);\r\n}\r\n" +
                    "</script>\r\n\r\n<template>\r\n    <component :is=\"Container\">\r\n        <slot />\r\n    " +
                    "</component>\r\n</template>\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
